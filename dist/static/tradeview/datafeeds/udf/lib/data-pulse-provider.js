import{getErrorMessage,logMessage}from"./helpers";var DataPulseProvider=function(){function e(e,s){this._subscribers={},this._requestsPending=0,this._historyProvider=e,setInterval(this._updateData.bind(this),s)}return e.prototype.subscribeBars=function(e,s,r,t){this._subscribers.hasOwnProperty(t)?logMessage("DataPulseProvider: already has subscriber with id="+t):(this._subscribers[t]={lastBarTime:null,listener:r,resolution:s,symbolInfo:e},logMessage("DataPulseProvider: subscribed for #"+t+" - {"+e.name+", "+s+"}"))},e.prototype.unsubscribeBars=function(e){delete this._subscribers[e],logMessage("DataPulseProvider: unsubscribed for #"+e)},e.prototype._updateData=function(){var e=this;if(!(this._requestsPending>0)){this._requestsPending=0;var s=function(s){r._requestsPending+=1,r._updateDataForSubscriber(s).then((function(){e._requestsPending-=1,logMessage("DataPulseProvider: data for #"+s+" updated successfully, pending="+e._requestsPending)})).catch((function(r){e._requestsPending-=1,logMessage("DataPulseProvider: data for #"+s+" updated with error="+getErrorMessage(r)+", pending="+e._requestsPending)}))},r=this;for(var t in this._subscribers)s(t)}},e.prototype._updateDataForSubscriber=function(e){var s=this,r=this._subscribers[e],t=parseInt((Date.now()/1e3).toString()),i=t-periodLengthSeconds(r.resolution,10);return this._historyProvider.getBars(r.symbolInfo,r.resolution,i,t).then((function(r){s._onSubscriberDataReceived(e,r)}))},e.prototype._onSubscriberDataReceived=function(e,s){if(this._subscribers.hasOwnProperty(e)){var r=s.bars;if(0!==r.length){var t=r[r.length-1],i=this._subscribers[e];if(!(null!==i.lastBarTime&&t.time<i.lastBarTime)){if(null!==i.lastBarTime&&t.time>i.lastBarTime){if(r.length<2)throw new Error("Not enough bars in history for proper pulse update. Need at least 2.");var a=r[r.length-2];i.listener(a)}i.lastBarTime=t.time,i.listener(t)}}}else logMessage("DataPulseProvider: Data comes for already unsubscribed subscription #"+e)},e}();export{DataPulseProvider};function periodLengthSeconds(e,s){return 24*("D"===e||"1D"===e?s:"M"===e||"1M"===e?31*s:"W"===e||"1W"===e?7*s:s*parseInt(e)/1440)*60*60}